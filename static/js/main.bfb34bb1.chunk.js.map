{"version":3,"sources":["styles/defaults.ts","styles/ant.ts","lib/request.ts","lib/constants.ts","features/user/model.ts","api/user/index.ts","features/user/hooks.ts","ui/atoms/link/styles.tsx","ui/atoms/link/index.tsx","ui/atoms/logo/index.tsx","ui/atoms/form/index.tsx","ui/molecules/nav/styles.ts","ui/molecules/nav/index.tsx","ui/molecules/menu/vertical.tsx","ui/organisms/header/styles.ts","pages/login/model.ts","lib/validators.ts","pages/login/index.tsx","ui/atoms/input/index.tsx","pages/errors/styles.ts","features/operations/model.ts","api/operations/index.ts","api/market/index.ts","features/market/model.ts","lib/table.tsx","features/portfolio/model.ts","api/portfolio/index.ts","lib/format.ts","pages/operations/model.ts","pages/operations/index.tsx","pages/routes.tsx","features/user/guards.ts","ui/organisms/header/index.tsx","ui/organisms/footer/styles.ts","ui/organisms/footer/index.tsx","ui/organisms/main/styles.ts","ui/organisms/main/index.tsx","ui/templates/generic/index.tsx","routing.tsx","app.tsx","index.tsx"],"names":["GenericStyles","createGlobalStyle","normalize","AntStylesOveride","attachFormData","file","name","meta","data","FormData","append","Object","keys","map","value","request","a","url","method","body","token","localStorage","getItem","fetchUrl","headers","Accept","Authorization","fetchOptions","fetch","response","code","status","result","get","includes","json","resBody","payload","ok","errorCodes","absoluteCenterPosition","position","top","bottom","right","left","margin","width","height","operationTranslations","Buy","BuyCard","Sell","BrokerCommission","ExchangeCommission","ServiceCommission","MarginCommission","OtherCommission","PayIn","PayOut","Tax","TaxLucre","TaxDividend","TaxCoupon","TaxBack","Repayment","PartRepayment","Coupon","Dividend","SecurityIn","SecurityOut","instrumentTranslations","Stock","Currency","Bond","Etf","statusTranslations","Done","Decline","Progress","currencySymbols","USD","RUB","lossTypes","profitTypes","timeRanges","range","color","label","from","moment","startOf","add","toISOString","to","endOf","subtract","getRangeByName","rangeName","find","item","sessionDomain","createDomain","tokenInitial","keep","userInitial","role","$token","createStore","$accounts","$user","setToken","createEvent","deleteToken","getAccounts","createEffect","use","$isAccountsPending","pending","on","_","done","accounts","length","onCreateEffect","effect","fail","user","error","watch","message","warning","forward","setItem","clear","window","onbeforeunload","clouserToken","LinkWrap","styled","Link","className","children","onClick","Logo","icon","LogoContanter","Form","handleSubmit","onSubmit","event","preventDefault","NavContainer","div","NavLink","NavMenu","NavItem","Item","Nav","path","useLocation","pathname","split","splice","join","theme","mode","style","lineHeight","selectedKeys","title","key","Header","HeaderContainer","LogoutButton","submitForm","resetForm","tokenStore","createInput","validator","password","keepStore","createField","initialValue","loginForm","createForm","fields","submit","reset","guard","source","sample","$values","filter","$isValid","target","store","config","placeholder","size","PopContent","PopContainer","href","rel","Container","Actions","Rember","TokenInput","required","prefix","suffix","type","$value","$error","changed","useStore","validateStatus","help","onChange","e","GetToken","Warning","section","operationsDomain","$operations","getOperations","id","operations","marketDomain","$stocks","$currencies","$usdPrice","getStocks","getOrderbook","getCurrency","figi","state","instruments","prepend","lastPrice","addSorter","field","sorter","b","portfolioDomain","$portfolio","getPortfolio","positions","formatNumber","number","Number","toFixed","getSignColor","Math","sign","handleFilters","includePortfolio","$operationStats","tradingProfit","totalCommisions","middleBuy","middleSell","$operationsSource","$tableFilters","$currentFilter","$potrfolioProfit","$isPortfolioIncluded","ignore","operationType","instrumentType","stonks","operation","found","intstrument","commissionValue","commission","commissionCurrency","currency","$operationsTable","combine","filters","usdPrice","filtersFields","filterKey","Boolean","every","ticker","price","payment","buyOperations","sellOperations","reduce","abs","Set","o","text","portfolio","tickers","portfolioBalance","averagePositionPrice","balance","expectedYield","$isTableDataPending","defaultRange","handlePickerDateChange","dateStrings","Stats","Options","Range","Tags","Switches","ROUTES","login","component","Title","level","defaultChecked","checked","content","htmlType","guards","route","context","React","currentRange","setRange","operationsTable","isTableDataPending","tableFilters","potrfolioProfit","isPortfolioIncluded","currentFilter","totalProfit","operationsColumns","dataIndex","filteredValue","render","arrowPointAtCenter","date","marginRight","format","onFilter","record","String","toLowerCase","elements","quantity","com","dates","RangePicker","minWidth","isChecked","columns","loading","dataSource","rowKey","pagination","showSorterTooltip","pageSize","notFoundForAnon","notFoundForUsers","NAV_DATA","BankOutlined","Footer","FooterContainer","todayYear","Date","getFullYear","Content","MainContainer","Main","GenericTemplate","isAuthed","isPending","spinning","Routing","session","routes","renderRoutes","locale","App","isAccountsPending","history","createBrowserHistory","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.bfb34bb1.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport { normalize } from 'styled-normalize';\n\nimport 'antd/dist/antd.min.css';\n\nexport const GenericStyles = createGlobalStyle`\n  \n  ${normalize}\n\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  :root {\n    --main-font: 'Roboto', sans-serif;\n    --title-font: 'Merriweather', serif;\n    --primary: #fff;\n    --secondary: #fff;\n    --warning: #fff;\n    --highlight: #f3f8fe;\n    --text-color: rgba(40, 46, 52, 0.8);\n    --text-color--secondary: rgba(56, 56, 56, 0.6);\n    --title-color: rgba(0, 0, 0, 1);\n    --link-active: #03a9f4;\n    --link-hover: #2196f3;\n    --border-color: rgba(0, 0, 0, 0.05);\n    --body-bg: #f5f5f6;\n    --block-bg: #fff;\n    --red: #f5222d;\n    --green: #52c41a;\n    --blue: #1890ff;\n    --box-shadow: 0 2px 6px 4px rgba(0, 0, 0, 0.03);\n  }\n\n  body,\n  html {\n    font-family: var(--main-font);\n    color: var(--text-color);\n    background-color: var(--body-bg);\n    font-size: 62.5%;\n    line-height: 1.4;\n    font-weight: 400;\n    min-width: 320px;\n    margin-left: auto;\n    margin-right: auto;\n    width: 100%;\n    height: 100%;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  section {\n    font-size: 1.6rem;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4 {\n    font-family: var(--main-font);\n    line-height: 1.1;\n    color: var(--text-color);\n  }\n\n  p {\n    font-family: var(--text-font);\n  }\n\n  button {\n    border: 0;\n  }\n\n  input {\n    border: 0;\n  }\n\n  a {\n    border: 0;\n    transition: 0.2s;\n    text-decoration: none;\n    color: var(--black);\n  }\n\n  a:visited,\n  a:focus,\n  a:active,\n  a:hover {\n    outline: 0 none;\n  }\n\n  img {\n    border: 0;\n  }\n\n  menu,\n  ol,\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n\n  li {\n    list-style-type: none;\n  }\n\n  section,\n  header,\n  footer {\n    font-size: 1.6rem;\n  }\n`;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const AntStylesOveride = createGlobalStyle`\n  .ant-layout {\n    min-height: 100vh;\n    background: var(--body-bg) !important;\n  }\n\n  .ant-spin-nested-loading > div > .ant-spin {\n    max-height: 100%;\n  }\n\n  .ant-table-column-sorters {\n    width: 100%;\n  }\n  \n  .ant-table-column-sorter {\n    margin-left: auto;\n  }\n\n  .ant-table-filter-dropdown .ant-dropdown-menu {\n    max-height: calc(516px - 130px);\n  }\n\n  .ant-menu.ant-menu-dark .ant-menu-item-selected, .ant-menu-submenu-popup.ant-menu-dark .ant-menu-item-selected {\n    background-color: transparent;\n    box-shadow: inset 0px -4px 0 #1890ff;\n    transition: 0.3s;\n  }\n\n  .ant-badge-status-text {\n    margin-left: 0;\n  }\n`;\n","type ResponseMeta = {\n  code: number;\n  url: string;\n  method: string;\n};\n\nexport interface SuccessResponse extends ResponseMeta {\n  payload: object;\n}\n\nexport interface FailResponse extends ResponseMeta {\n  data: {\n    message: '';\n  };\n}\n\nexport type FormData = {\n  file: File;\n  name: string;\n  meta?: {\n    [index: string]: string;\n  };\n};\n\nexport type RequestProps = {\n  method?: string;\n  url: string;\n  body?: object;\n\n  file?: FormData;\n};\n\nfunction attachFormData({ file, name, meta }: FormData) {\n  const data = new FormData();\n  data.append(name, file);\n  meta && Object.keys(meta).map((value) => data.append(value, meta[value]));\n  return data;\n}\n\nexport const request = async ({\n  url,\n  method = 'get',\n  body,\n  file,\n}: RequestProps): Promise<any> => {\n  const token = localStorage.getItem('token');\n  const fetchUrl = url;\n\n  const headers = {\n    ...(!file && { 'Content-Type': 'application/json' }),\n    Accept: 'application/json',\n    Authorization: `Bearer ${token}`,\n  };\n\n  const fetchOptions = {\n    headers,\n    method,\n    ...(file && { body: attachFormData(file) }),\n  };\n\n  const response = await fetch(fetchUrl, fetchOptions);\n\n  const meta = {\n    code: response.status,\n    url,\n    method,\n  };\n\n  let result: any = {};\n\n  if (response.headers.get('Content-Type')?.includes('application/json')) {\n    result = await response.json();\n  }\n\n  const resBody: FailResponse | SuccessResponse = {\n    payload: result.payload,\n    ...meta,\n  };\n\n  if (response.ok) return resBody;\n\n  throw resBody;\n};\n","import moment from 'moment';\n\nexport const BREAKPOINTS = {\n  DESKTOP: 1024,\n  TABLET: 768,\n  SMARTPHONE: 425,\n  PHONE: 320,\n};\n\nexport const errorCodes = {\n  NOT_AUTHED: 401,\n};\n\nexport const absoluteCenterPosition: any = {\n  position: 'absolute',\n  top: 0,\n  bottom: 0,\n  right: 0,\n  left: 0,\n  margin: 'auto',\n  width: 40,\n  height: 40,\n};\n\nexport const operationTranslations = {\n  Buy: 'Покупка (cо счёта)',\n  BuyCard: 'Покупка (с карты)',\n  Sell: 'Продажа (со счёта)',\n  BrokerCommission: 'Комиссия (брокер)',\n  ExchangeCommission: 'Комиссия (биржа)',\n  ServiceCommission: 'Комиссия (сервис)',\n  MarginCommission: 'Комиссия (плечо)',\n  OtherCommission: 'Другая комиссия',\n  PayIn: 'Пополнение',\n  PayOut: 'Снятие',\n  Tax: 'Налог',\n  TaxLucre: 'Налог (прибыль)',\n  TaxDividend: 'Налог (дивиденды)',\n  TaxCoupon: 'Налог (купоны)',\n  TaxBack: 'Возврат налога',\n  Repayment: 'Погашение',\n  PartRepayment: 'Частичное погашение',\n  Coupon: 'Купон',\n  Dividend: 'Дивиденды',\n  SecurityIn: 'SecurityIn',\n  SecurityOut: 'SecurityOut',\n};\n\nexport const operationTypes = [\n  'Buy',\n  'Sell',\n  'BuyCard',\n  'BrokerCommission',\n  'ExchangeCommission',\n  'ServiceCommission',\n  'MarginCommission',\n  'OtherCommission',\n  'PayIn',\n  'PayOut',\n  'Tax',\n  'TaxLucre',\n  'TaxDividend',\n  'TaxCoupon',\n  'TaxBack',\n  'Repayment',\n  'PartRepayment',\n  'Coupon',\n  'Dividend',\n  'SecurityIn',\n  'SecurityOut',\n];\n\nexport const instrumentTranslations = {\n  Stock: 'Акции',\n  Currency: 'Валюта',\n  Bond: 'Облигация',\n  Etf: 'Фонды',\n};\n\nexport const statusTranslations = {\n  Done: 'Выполнено',\n  Decline: 'Отклонено',\n  Progress: 'Progress',\n};\n\nexport const instrumentTypes = ['Stock', 'Currency', 'Bond', 'Etf'];\n\nexport const operationTypeColor = {\n  Buy: '#ff4d4f',\n  Sell: '#52c41a',\n  BrokerCommission: '#faad14',\n  PayIn: '#2db7f5',\n  PayOut: '#faad14',\n  Dividend: '#faad14',\n  BuyCard: '#ff4d4f',\n  SellCard: '#52c41a',\n};\n\nexport const currencySymbols = {\n  USD: '$',\n  RUB: '₽',\n};\n\nexport const commisionTypes = [\n  'BrokerCommission',\n  'ExchangeCommission',\n  'ServiceCommission',\n  'MarginCommission',\n  'OtherCommission',\n];\n\nexport const lossTypes = ['Buy', 'BuyCard'];\nexport const profitTypes = ['Sell'];\n\nexport const timeRanges = [\n  {\n    range: 'today',\n    color: '#4dc21f',\n    label: 'Сегодня',\n    from: moment().startOf('day').add(2, 'hours').toISOString(),\n    to: moment().endOf('day').add(2, 'hours').toISOString(),\n  },\n  {\n    range: 'yesterday',\n    color: '#4dc21f',\n    label: 'Вчера',\n    from: moment()\n      .subtract('1', 'days')\n      .startOf('day')\n      .add(2, 'hours')\n      .toISOString(),\n    to: moment().endOf('day').add(2, 'hours').toISOString(),\n  },\n  {\n    range: 'weekAgo',\n    color: '#47c03f',\n    label: 'Неделя',\n    from: moment()\n      .startOf('day')\n      .subtract('7', 'days')\n      .add(2, 'hours')\n      .toISOString(),\n    to: moment().endOf('day').add(2, 'hours').toISOString(),\n  },\n  {\n    range: 'monthAgo',\n    color: '#42be5e',\n    label: 'Месяц',\n    from: moment()\n      .startOf('day')\n      .subtract('1', 'month')\n      .add(2, 'hours')\n      .toISOString(),\n    to: moment().endOf('day').add(2, 'hours').toISOString(),\n  },\n  {\n    range: 'quaterAgo',\n    color: '#3dbd7d',\n    label: 'Квартал',\n    from: moment()\n      .startOf('day')\n      .subtract('4', 'month')\n      .add(2, 'hours')\n      .toISOString(),\n    to: moment().endOf('day').add(2, 'hours').toISOString(),\n  },\n  {\n    range: 'yearAgo',\n    color: '#38bb9c',\n    label: 'Год',\n    from: moment().startOf('year').add(2, 'hours').toISOString(),\n    to: moment().endOf('day').add(2, 'hours').toISOString(),\n  },\n  {\n    range: 'all',\n    color: '#32b9bc',\n    label: 'Всё время',\n    from: moment()\n      .startOf('day')\n      .subtract('6', 'year')\n      .add(2, 'hours')\n      .toISOString(),\n    to: moment().endOf('day').add(2, 'hours').toISOString(),\n  },\n];\n\nexport const getRangeByName = (rangeName: string) => {\n  const initialDate = {\n    from: '',\n    to: '',\n  };\n\n  const date = timeRanges.find((item) => item.range === rangeName);\n\n  return date || initialDate;\n};\n","import { createEvent, createStore, createDomain, forward } from 'effector';\nimport { message } from 'antd';\n\nimport * as API from 'api/user';\n\nimport { errorCodes } from 'lib/constants';\n\nexport const sessionDomain = createDomain();\n\nexport type UserSession = {\n  role: API.Roles | null;\n};\n\nconst tokenInitial = {\n  token: null,\n  keep: false,\n};\n\nconst userInitial = {\n  role: null,\n};\n\nexport const $token = createStore<API.UserToken>(tokenInitial);\nexport const $accounts = createStore<API.Account[]>([]);\nexport const $user = createStore<UserSession>(userInitial);\n\nexport const setToken = createEvent<API.UserToken>();\nexport const deleteToken = createEvent();\n\nexport const getAccounts = sessionDomain.createEffect<\n  void,\n  API.UserAccountsPayload\n>();\n\ngetAccounts.use(API.getUser);\n\nexport const $isAccountsPending = getAccounts.pending;\n\n$token\n  .on(setToken, (_, payload) => payload)\n  .on(deleteToken, () => tokenInitial);\n\n$accounts.on(getAccounts.done, (_, { result }) => result.payload.accounts);\n\n$user.on(getAccounts.done, (_, { result }) => {\n  if (result.payload.accounts.length > 0) {\n    return { role: 'USER' };\n  }\n});\n\nsessionDomain.onCreateEffect((effect) => {\n  $user.on(effect.fail, (user, payload) => {\n    const err = payload.error as any;\n\n    if (err.code === errorCodes.NOT_AUTHED) {\n      return userInitial;\n    }\n    return user;\n  });\n\n  effect.fail.watch(() => {\n    message.warning('Ошибка авторизации, проверьте токен');\n  });\n});\n\nforward({\n  from: deleteToken,\n  to: getAccounts,\n});\n\nsetToken.watch(({ token, keep }) => {\n  if (token) {\n    localStorage.setItem('token', token);\n  }\n  if (keep) {\n    localStorage.setItem('keep', 'keep');\n  }\n});\n\ndeleteToken.watch(() => {\n  localStorage.clear();\n});\n","import { request } from 'lib/request';\n\nexport type Roles = 'USER';\n\nexport type UserToken = {\n  token: string | null;\n  keep: boolean;\n};\n\nexport type Account = {\n  brokerAccountType: string;\n  brokerAccountId: string;\n};\n\nexport type UserAccountsPayload = {\n  payload: {\n    accounts: Account[];\n  };\n};\n\nexport const getUser = (): Promise<UserAccountsPayload> =>\n  request({\n    method: 'get',\n    url: '/user/accounts',\n  });\n\nexport type Credentials = {\n  login: string;\n  password: string;\n};\n\nexport const logOut = (): Promise<void> =>\n  request({\n    method: 'get',\n    url: '/user/logout',\n  });\n\nexport const logIn = (): Promise<void> =>\n  request({\n    method: 'post',\n    url: '/user/login',\n  });\n","import * as React from 'react';\nimport { getAccounts, setToken } from './model';\n\nconst token = localStorage.getItem('token');\nconst keep = localStorage.getItem('keep');\n\nexport const useAuth = () => {\n  React.useEffect(() => {\n    if (token) {\n      setToken({ token, keep: keep === 'keep' });\n    }\n    getAccounts();\n  }, []);\n};\n\nwindow.onbeforeunload = function () {\n  const clouserToken = localStorage.getItem('token');\n  const closureKeep = localStorage.getItem('keep');\n\n  if (!closureKeep || !clouserToken) {\n    localStorage.clear();\n  }\n};\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nexport const LinkWrap = styled(Link)`\n  color: var(--blue);\n\n  &:hover {\n    color: green;\n  }\n`\n","import * as React from 'react'\n\nimport { LinkWrap } from './styles'\n\ninterface ILinkCompProps {\n  children?: React.ReactNode | null\n  onClick?: () => void\n  className?: string\n  to: string\n}\n\nexport const Link: React.FC<ILinkCompProps> = ({ className, children, to, onClick }) => {\n  return (\n    <LinkWrap className={className} to={to} onClick={onClick}>\n      {children}\n    </LinkWrap>\n  )\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\ntype LogoProps = {\n  to: string;\n  icon?: React.ReactNode;\n};\n\nexport const Logo: React.FC<LogoProps> = ({ to, icon }) => {\n  return <LogoContanter to={to}>{icon}</LogoContanter>;\n};\n\nconst LogoContanter = styled(Link)`\n  text-transform: uppercase;\n  font-weight: 900;\n  position: relative;\n  color: #fff;\n`;\n","import * as React from 'react';\nimport { Event } from 'effector';\ntype MessageFormProps = {\n  handleSubmit: Event<void>;\n};\n\nexport const Form: React.FC<MessageFormProps> = ({\n  handleSubmit,\n  children,\n}) => {\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (handleSubmit) {\n      handleSubmit();\n    }\n  };\n\n  return <form onSubmit={onSubmit}>\n    {children}\n  </form>;\n};\n","import styled from 'styled-components';\nimport { Menu } from 'antd';\n\nimport { Link } from 'ui/atoms';\n\nexport const NavContainer = styled.div`\n  display: flex;\n  padding: 0 24px;\n`;\n\nexport const NavLink = styled(Link)`\n  font-weight: bold;\n`;\n\nexport const NavMenu = styled(Menu)``;\nexport const NavItem = styled(Menu.Item)``;\n","import * as React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { NavContainer, NavLink, NavMenu, NavItem } from './styles';\n\ntype MenuItem = {\n  path: string;\n  title: string;\n};\n\ntype MenuData = {\n  data: Array<MenuItem>;\n};\n\nexport const Nav: React.FC<MenuData> = ({ data }) => {\n  const location = useLocation();\n  const path = location.pathname.split('/').splice(0, 2).join('/');\n\n  return (\n    <NavContainer>\n      <NavMenu\n        theme=\"dark\"\n        mode=\"horizontal\"\n        style={{ lineHeight: '64px' }}\n        selectedKeys={[path]}\n      >\n        {data.map(({ path, title }) => (\n          <NavItem key={path}>\n            <NavLink to={path}>{title}</NavLink>\n          </NavItem>\n        ))}\n      </NavMenu>\n    </NavContainer>\n  );\n};\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport { Menu } from 'antd'\n\nimport { Link } from 'ui/atoms'\n\ntype MenuDataProps = {\n  menuData: Array<MenuItemProps>;\n  defaultSelectedKeys?: Array<string>;\n  defaultOpenKeys?: Array<string>;\n}\n\ntype MenuItemProps = {\n  title: string;\n  icon?: React.ReactNode;\n  to?: string;\n  data?: Array<SubItemProps>;\n}\n\ntype SubItemProps = {\n  title: string;\n  icon?: string;\n  to?: string;\n}\n\nexport const VerticalMenu: React.FC<MenuDataProps> = ({\n  menuData,\n  defaultSelectedKeys,\n  defaultOpenKeys\n}) => {\n  const { SubMenu } = Menu\n\n  return (\n    <Menu mode=\"inline\" defaultSelectedKeys={defaultSelectedKeys} defaultOpenKeys={defaultOpenKeys}>\n      {menuData.map(({ title, icon, to, data }, key) =>\n        data ? (\n          <SubMenu\n            key={`sub-${key}`}\n            title={\n              <span>\n                {icon && icon} {title}\n              </span>\n            }\n          >\n            {data.map(({ title, to, icon }, subKey) => (\n              <Menu.Item key={`sub-item-${subKey}`}>\n                {icon && icon}\n                {to ? <Link to={to}>{title}</Link> : title}\n              </Menu.Item>\n            ))}\n          </SubMenu>\n        ) : (\n            <Menu.Item key={key}>\n              {icon && icon}\n              {to ? <Link to={to}>{title}</Link> : title}\n            </Menu.Item>\n          )\n      )}\n    </Menu>\n  )\n}\n\nexport const MenuLink = styled(Link)``\n","import styled from 'styled-components'\nimport { Layout, Button } from 'antd'\n\nconst { Header } = Layout\n\nexport const HeaderContainer = styled(Header)`\n  display: flex;\n  align-items: center;\n`\n\nexport const LogoutButton = styled(Button)`\n  margin-left: auto;\n`\n","import { createEvent, sample, guard, forward } from 'effector';\nimport { createField, createInput, createForm } from 'effector-form';\n\nimport { setToken, getAccounts } from 'features/user';\nimport { passValidator } from 'lib/validators';\n\nexport const submitForm = createEvent<void>();\nexport const resetForm = createEvent<void>();\n\nexport const tokenStore = createInput({\n  name: 'token',\n  validator: passValidator,\n});\n\nexport const keepStore = createField<boolean>({\n  name: 'keep',\n  initialValue: false,\n});\n\nexport const loginForm = createForm({\n  name: 'loginForm',\n  fields: [tokenStore, keepStore],\n  submit: submitForm,\n  reset: resetForm,\n});\n\nguard({\n  source: sample(loginForm.$values, submitForm),\n  filter: loginForm.$isValid,\n  target: setToken,\n});\n\nforward({\n  from: setToken,\n  to: resetForm,\n});\n\nforward({\n  from: setToken,\n  to: getAccounts,\n});\n","import { combine } from 'effector';\nimport { InputResult, GroupResult, FieldResult } from 'effector-form';\n\nexport const loginValidator = (login: string) => {\n  if (login.length === 0) {\n    return 'Обязательное поле';\n  }\n  if (!/\\w+/.test(login)) {\n    return 'Некорректное имя';\n  }\n  return null;\n};\n\nexport const passValidator = (password: string) => {\n  if (password.length === 0) {\n    return 'Обязательное поле';\n  }\n  return null;\n};\n\nexport const fieldsValidator = <T>(\n  fields: (InputResult | GroupResult | FieldResult<T>)[],\n) => {\n  const allFields = fields.map(({ $error }) => $error);\n  return combine(allFields, (all) => all.every((value) => !value));\n};\n\nexport function isObjectEmpty(obj: object) {\n  return Object.getOwnPropertyNames(obj).length > 0;\n}\n\nexport function isParamEmpty() {\n  return undefined;\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport { Button, Checkbox, Typography, Popover } from 'antd';\n\nimport { Form, Input } from 'ui/atoms';\n\nimport { tokenStore, keepStore, submitForm } from './model';\n\nconst fields = {\n  token: {\n    store: tokenStore,\n    config: {\n      placeholder: 'Токен',\n      name: 'token',\n      size: 'large' as const,\n    },\n  },\n};\n\nconst PopContent: React.FC = () => (\n  <PopContainer>\n    <div>1. Перейдите по ссылке в Тинькофф</div>\n    <div>2. Найдите секцию Токен для OpenAPI в нижней части сайта</div>\n    <div>3. Скопируйте токен. Токен отображается только один раз.</div>\n    <div>4. Вставьте токен в форму и нажмите «Войти»</div>\n    <div>\n      Полная инструкция для получению токена на&nbsp;\n      <a\n        href=\"https://tinkoffcreditsystems.github.io/invest-openapi/auth/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        официальном сайте Github Тинькофф\n      </a>\n    </div>\n  </PopContainer>\n);\n\nexport const LoginPage: React.FC = () => (\n  <Container>\n    <Typography.Title level={4}>Aналитика инвестиций</Typography.Title>\n    <Form handleSubmit={submitForm}>\n      <TokenInput {...fields.token} />\n      <Actions>\n        <Rember>\n          <Checkbox\n            defaultChecked={false}\n            onChange={(e) => keepStore.changed(e.target.checked)}\n          >\n            Сохранить токен\n          </Checkbox>\n          <Popover content={PopContent} title=\"Как получить токен\">\n            <GetToken>\n              <a\n                href=\"https://www.tinkoff.ru/invest/settings\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Получить токен\n              </a>\n            </GetToken>\n          </Popover>\n        </Rember>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Войти\n        </Button>\n        <Warning>\n          <div>\n            Приложение использует токен <b>только</b> для запроса данных по\n            операциям и портфолио.\n          </div>\n          <div>\n            Отозвать токен можно в&nbsp;\n            <a\n              href=\"https://id.tinkoff.ru/account\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              ЛК Тинькофф\n            </a>\n          </div>\n        </Warning>\n      </Actions>\n    </Form>\n  </Container>\n);\n\nconst Container = styled.div`\n  margin: auto;\n  background-color: #fff;\n  padding: 24px 24px 24px 24px;\n  border-radius: 3px;\n  min-width: 320px;\n  max-width: 360px;\n\n  h4 {\n    text-align: center;\n    padding-bottom: 8px;\n  }\n`;\n\nconst Actions = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n\n  button {\n    width: 100%;\n    height: 40px;\n  }\n`;\n\nconst Rember = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  width: 100%;\n  margin-bottom: 16px;\n\n  a {\n    color: var(--blue);\n  }\n`;\n\nconst TokenInput = styled(Input)`\n  text-align: center;\n`;\n\nconst GetToken = styled.div`\n  font-size: 14px;\n`;\n\nconst PopContainer = styled.div`\n  max-width: 260px;\n\n  div {\n    margin-bottom: 6px;\n  }\n\n  a {\n    text-decoration: underline;\n    color: var(--blue);\n  }\n`;\n\nconst Warning = styled.div`\n  font-size: 14px;\n  padding-top: 14px;\n\n  div {\n    margin-bottom: 6px;\n  }\n\n  a {\n    text-decoration: underline;\n    color: var(--blue);\n  }\n`;\n","import * as React from 'react';\nimport { useStore } from 'effector-react';\nimport { Form, Input as AntInput } from 'antd';\nimport { InputResult } from 'effector-form';\n\ntype DefaultFieldProps = {\n  className?: string;\n  store: InputResult;\n  config: {\n    label?: string;\n    required?: boolean;\n    type?: string;\n    name?: string;\n    placeholder?: string;\n    prefix?: React.ReactNode | string;\n    suffix?: React.ReactNode | string;\n    size?: 'large' | 'small';\n  };\n};\n\nexport const Input: React.FC<DefaultFieldProps> = ({\n  className,\n  store,\n  config,\n}) => {\n  const {\n    label,\n    required,\n    name,\n    placeholder,\n    prefix,\n    suffix,\n    size,\n    type,\n  } = config;\n  const { $value, $error, changed } = store;\n\n  const value = useStore($value);\n  const error = useStore($error);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    changed(value);\n  };\n\n  const isError = false;\n\n  return (\n    <Form.Item\n      label={label}\n      required={required}\n      validateStatus={isError ? 'error' : ''}\n      help={isError && error}\n      className={`form-item-${name}`}\n    >\n      <AntInput\n        className={className}\n        value={value}\n        prefix={prefix}\n        suffix={suffix}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        size={size}\n        onChange={handleChange}\n      />\n    </Form.Item>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.section``;\n","import { createStore } from 'effector';\n\nimport * as API from 'api/operations';\n\nimport { sessionDomain } from 'features/user';\n\nexport const operationsDomain = sessionDomain.createDomain();\n\nexport const $operations = createStore<API.Operation[]>([]);\n\nexport const getOperations = operationsDomain.createEffect<\n  API.OperationsProps,\n  API.OperationsPayload\n>();\n\ngetOperations.use(API.getOperations);\n\n$operations.on(\n  getOperations.done,\n  (_, { result }) => result.payload.operations,\n);\n\n// stockImage: `http://static.tinkoff.ru/brands/traiding/${\n//         imagesDomain[item.instrumentType]\n//       }x160.png`\n","import { request } from 'lib/request';\nimport * as API from 'api/market';\n\nexport type OperationsProps = {\n  from: string;\n  to: string;\n  id?: number;\n};\n\nexport type OperationTypes =\n  | 'Buy'\n  | 'BuyCard'\n  | 'Sell'\n  | 'BrokerCommission'\n  | 'ExchangeCommission'\n  | 'ServiceCommission'\n  | 'MarginCommission'\n  | 'OtherCommission'\n  | 'PayIn'\n  | 'PayOut'\n  | 'Tax'\n  | 'TaxLucre'\n  | 'TaxDividend'\n  | 'TaxCoupon'\n  | 'TaxBack'\n  | 'Repayment'\n  | 'PartRepayment'\n  | 'Coupon'\n  | 'Dividend'\n  | 'SecurityIn'\n  | 'SecurityOut';\n\nexport type OperationStatus = 'Decline' | 'Done' | 'Progress';\nexport type InstrumentTypes = 'Stock' | 'Currency' | 'Bond' | 'Etf';\nexport type CurrencyTypes = 'USD' | 'RUB';\n\nexport type Operation = {\n  commission: {\n    currency: CurrencyTypes;\n    value: number;\n  };\n  currency: CurrencyTypes;\n  date: string;\n  figi: string;\n  id: string;\n  instrumentType: InstrumentTypes;\n  isMarginCall: boolean;\n  operationType: OperationTypes;\n  payment: number;\n  price: number;\n  quantity: number;\n  status: OperationStatus;\n  trades: string[];\n};\n\ntype TableItem = {\n  commissionValue: number;\n  commissionCurrency: CurrencyTypes;\n};\n\nexport type TableOperation = Operation &\n  Partial<API.Stock> &\n  Partial<TableItem>;\n\nexport type OperationsPayload = {\n  payload: {\n    operations: Operation[];\n  };\n};\n\nexport const getOperations = ({\n  from,\n  to,\n  id,\n}: OperationsProps): Promise<OperationsPayload> =>\n  request({\n    url: `/operations?from=${from}&to=${to}${\n      id ? `&brokerAccountId=${id}` : ''\n    }`,\n  });\n","import { request } from 'lib/request';\n\nimport * as API from 'api/operations';\n\nexport type Figi = {\n  figi: string;\n};\n\nexport type TickerByFigiPayload = {\n  payload: TickerByFigi;\n};\n\nexport type Stock = {\n  figi: string;\n  ticker: string;\n  isin: string;\n  minPriceIncrement: number;\n  lot: number;\n  currency: API.CurrencyTypes;\n  name: string;\n  type: API.InstrumentTypes;\n};\n\nexport type StocksPayload = {\n  payload: {\n    instruments: Stock[];\n  };\n};\n\nexport const getStocks = (): Promise<StocksPayload> =>\n  request({\n    url: `/market/stocks`,\n  });\n\nexport type Currency = {\n  figi: string;\n  ticker: string;\n  isin: string;\n  minPriceIncrement: number;\n  lot: number;\n  currency: API.CurrencyTypes;\n  name: string;\n  type: API.InstrumentTypes;\n};\n\nexport type CurrencyPayload = {\n  payload: {\n    instruments: Currency[];\n  };\n};\n\nexport const getCurrencies = (): Promise<CurrencyPayload> =>\n  request({\n    url: `/market/currencies`,\n  });\n\nexport type TradeStatus = 'NormalTrading' | string;\n\nexport type Orderbook = {\n  trackingId: string;\n  status: string;\n  payload: {\n    figi: string;\n    depth: number;\n    bids: [\n      {\n        price: number;\n        quantity: number;\n      },\n    ];\n    asks: [\n      {\n        price: number;\n        quantity: number;\n      },\n    ];\n    tradeStatus: TradeStatus;\n    minPriceIncrement: number;\n    faceValue: number;\n    lastPrice: number;\n    closePrice: number;\n    limitUp: number;\n    limitDown: number;\n  };\n};\n\nexport const getOrderbook = ({ figi }: Figi): Promise<Orderbook> =>\n  request({\n    url: `/market/orderbook?figi=${figi}&depth=1`,\n  });\n\nexport type TickerByFigi = {\n  figi: string;\n  ticker: string;\n  isin: string;\n  minPriceIncrement: number;\n  lot: number;\n  currency: string;\n  name: string;\n  type: string;\n};\n\nexport const getTickerByFigi = ({ figi }: Figi): Promise<TickerByFigiPayload> =>\n  request({\n    url: `/market/search/by-figi?figi=${figi}`,\n  });\n","import { createStore, forward } from 'effector';\n\nimport * as API from 'api/market';\n\nimport { sessionDomain } from 'features/user';\n\nexport const marketDomain = sessionDomain.createDomain();\n\nexport const $stocks = createStore<API.Stock[]>([]);\nexport const $currencies = createStore<API.Currency[]>([]);\nexport const $usdPrice = createStore<number>(-1);\n\nexport const getStocks = marketDomain.createEffect<void, API.StocksPayload>();\nexport const getOrderbook = marketDomain.createEffect<\n  API.Figi,\n  API.Orderbook\n>();\n\nexport const getCurrency = marketDomain.createEffect<\n  void,\n  API.CurrencyPayload\n>();\n\ngetStocks.use(API.getStocks);\ngetCurrency.use(API.getCurrencies);\ngetOrderbook.use(API.getOrderbook);\n\n$stocks.on(getStocks.done, (state, { result }) => result.payload.instruments);\n\n$currencies.on(\n  getCurrency.done,\n  (state, { result }) => result.payload.instruments,\n);\n\nforward({\n  from: getCurrency.done,\n  to: getOrderbook.prepend((payload) => ({\n    figi:\n      payload.result.payload.instruments.find(\n        (item) => item.name === 'Доллар США',\n      )?.figi || '',\n  })),\n});\n\n$usdPrice.on(getOrderbook.done, (_, { result }) => result.payload.lastPrice);\n","import * as React from 'react';\nimport { Input, Button } from 'antd';\nimport { SearchOutlined, CalendarOutlined } from '@ant-design/icons';\n\ntype FilterDropdown = {\n  setSelectedKeys: (keys: string[]) => string;\n  selectedKeys: string[];\n  confirm: () => void;\n  clearFilters: () => void;\n};\n\ntype SearchTypes<T> = {\n  ref: React.RefObject<any>;\n  placeholder: string;\n  state: any;\n};\n\nexport function addSearch<T>({ placeholder, ref, state }: SearchTypes<T>) {\n  const [visible, setVisible] = state;\n\n  return {\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n    }: FilterDropdown) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={ref}\n          placeholder={placeholder}\n          value={selectedKeys[0]}\n          onChange={(e) => {\n            setSelectedKeys(e.target.value ? [e.target.value] : []);\n            confirm();\n            setVisible(true);\n          }}\n          onPressEnter={confirm}\n          style={{ width: 208, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          onClick={() => {\n            confirm();\n            setVisible(false);\n          }}\n          type=\"primary\"\n          size=\"small\"\n          style={{ width: 100, marginRight: 8 }}\n        >\n          Найти\n        </Button>\n        <Button\n          onClick={() => {\n            setSelectedKeys(['']);\n            confirm();\n            setVisible(false);\n          }}\n          size=\"small\"\n          style={{ width: 100 }}\n        >\n          Сбросить\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered: boolean) => (\n      <SearchOutlined\n        style={{ color: filtered ? '#1890ff' : undefined }}\n        onClick={() => {\n          setVisible(!visible);\n          setTimeout(() => ref?.current?.focus(), 1000);\n        }}\n      />\n    ),\n    onFilterDropdownVisibleChange: (visible: boolean) => {\n      if (visible) {\n        setTimeout(() => ref?.current?.focus(), 1000);\n        setVisible(true);\n      }\n    },\n    filterDropdownVisible: visible,\n  };\n}\n\nexport function addRangeSearch() {\n  return {\n    filterDropdown: () => <>!</>,\n    onFilter: () => true,\n    filterIcon: (filtered: boolean) => (\n      <CalendarOutlined style={{ color: filtered ? '#1890ff' : undefined }} />\n    ),\n  };\n}\n\nexport function addFilter<T>(fields: (keyof T)[], type?: 'search' | 'list') {\n  return {\n    onFilter: (value: string | number | boolean, record: T) => {\n      const normalize = (value: any): string => String(value).toLowerCase();\n      const elements = fields.map((item) => normalize(record[item]));\n\n      return type === 'search'\n        ? elements.join(' ').includes(normalize(value))\n        : elements.join(' ') === normalize(value);\n    },\n  };\n}\n\nexport function addSorter<T>(field: keyof T) {\n  return {\n    sorter: (a: T, b: T) => {\n      if (a[field] > b[field]) return 1;\n      if (a[field] < b[field]) return -1;\n      return 0;\n    },\n  };\n}\n","import { createStore } from 'effector';\n\nimport * as API from 'api/portfolio';\nimport { sessionDomain } from 'features/user';\n\nexport const portfolioDomain = sessionDomain.createDomain();\n\nexport const $portfolio = createStore<API.PortfolioItem[] | null>(null);\n\nexport const getPortfolio = portfolioDomain.createEffect<\n  void,\n  API.PortfolioPayload\n>();\n\ngetPortfolio.use(API.getPortfolio);\n\n$portfolio.on(getPortfolio.done, (_, { result }) => result.payload.positions);\n","import { request } from 'lib/request';\n\nimport * as API from 'api/operations';\n\nexport type PortfolioItem = {\n  figi: string;\n  ticker: string;\n  isin: string;\n  instrumentType: string;\n  balance: number;\n  blocked: number;\n  expectedYield: {\n    currency: string;\n    value: number;\n  };\n  lots: number;\n  averagePositionPrice: {\n    currency: API.CurrencyTypes;\n    value: number;\n  };\n  averagePositionPriceNoNkd: {\n    currency: string;\n    value: number;\n  };\n  name: string;\n};\n\nexport type PortfolioPayload = {\n  payload: { positions: PortfolioItem[] };\n};\n\nexport const getPortfolio = (): Promise<PortfolioPayload> =>\n  request({\n    url: `/portfolio`,\n  });\n","export const formatNumber = (number: number | string): number => {\n  return Number(Number(number).toFixed(2));\n};\n\nexport const getSignColor = (number: number) =>\n  Math.sign(number) < 0 ? 'var(--red)' : 'var(--green)';\n","import { createStore, createEvent, forward, combine } from 'effector';\n\nimport * as API from 'api/operations';\nimport { getOperations } from 'features/operations';\nimport {\n  getStocks,\n  getCurrency,\n  getOrderbook,\n  $usdPrice,\n} from 'features/market';\nimport { getPortfolio, $portfolio } from 'features/portfolio';\n\nimport {\n  instrumentTranslations,\n  operationTranslations,\n  statusTranslations,\n  lossTypes,\n  profitTypes,\n} from 'lib/constants';\n\nimport { formatNumber } from 'lib/format';\n\ntype Filter = {\n  text: string;\n  value: string;\n};\n\ntype TableFilters = {\n  [P in keyof API.TableOperation]?: Filter[];\n};\ntype ActiveFilters = {\n  [P in keyof API.TableOperation]?: string[];\n};\n\ntype OperationStats = {\n  tradingProfit: number;\n  totalCommisions: number;\n  middleBuy: number;\n  middleSell: number;\n};\n\nexport const handleFilters = createEvent<any>();\nexport const includePortfolio = createEvent<boolean>();\n\nexport const $operationStats = createStore<OperationStats>({\n  tradingProfit: 0,\n  totalCommisions: 0,\n  middleBuy: 0,\n  middleSell: 0,\n});\n\nexport const $operationsSource = createStore<API.TableOperation[]>([]);\nexport const $tableFilters = createStore<TableFilters>({});\n\nexport const initialFilters = {\n  status: ['Done'],\n};\n\nexport const $currentFilter = createStore<ActiveFilters>({\n  status: initialFilters.status,\n});\n\nexport const $potrfolioProfit = createStore<number>(0);\nexport const $isPortfolioIncluded = createStore<boolean>(false);\n\nconst ignore = ['BrokerCommission', 'PayIn', 'Currency'];\n\n$operationsSource\n  .on(getOperations.done, (_, { result }) =>\n    result.payload.operations.filter(\n      (item) =>\n        !ignore.includes(item.operationType) &&\n        !ignore.includes(item.instrumentType),\n    ),\n  )\n  .on(getStocks.done, (operations, { result }) => {\n    const stonks = result.payload.instruments;\n    const stonksOperations = operations.map((operation) => {\n      const found = stonks.find(\n        (intstrument) => intstrument.figi === operation.figi,\n      );\n\n      return {\n        ...operation,\n        ...found,\n        commissionValue: operation.commission?.value || 0,\n        commissionCurrency: operation.commission?.currency || 0,\n      };\n    });\n\n    return stonksOperations;\n  });\n\nexport const $operationsTable = combine(\n  $operationsSource,\n  $currentFilter,\n  $usdPrice,\n  (operations, filters: any, usdPrice) => {\n    const filtersFields =\n      (Object.keys(filters) as (keyof API.TableOperation)[]) || [];\n\n    const filteredOperations = operations.filter(\n      (operation: API.TableOperation) =>\n        filtersFields\n          .map((filterKey) =>\n            Boolean(filters[filterKey])\n              ? filters[filterKey].includes(operation[filterKey])\n              : true,\n          )\n          .every(Boolean),\n    );\n\n    const sameCurrency = filteredOperations.map((item) => {\n      return {\n        ...item,\n        ...((item.currency === 'RUB' ||\n          (item.ticker === 'TCS' && item.commissionCurrency === 'RUB')) && {\n          currency: 'USD' as const,\n          price: formatNumber(item.price / usdPrice),\n          payment: formatNumber(item.payment / usdPrice),\n          commissionValue:\n            formatNumber((item?.commissionValue || 0) / usdPrice) || 0,\n          commission: {\n            currency: 'USD' as const,\n            value: formatNumber(item.commission?.value / usdPrice),\n          },\n        }),\n      };\n    });\n\n    return sameCurrency;\n  },\n);\n\n$currentFilter.on(handleFilters, (_, payload) => payload);\n$isPortfolioIncluded.on(includePortfolio, (_, payload) => payload);\n\n// stats\n\nforward({\n  from: $operationsTable.map((operations) => {\n    const buyOperations = operations.filter((item) =>\n      lossTypes.includes(item.operationType),\n    );\n\n    const sellOperations = operations.filter((item) =>\n      profitTypes.includes(item.operationType),\n    );\n\n    const tradingProfit = operations\n      .map((item) => item.payment)\n      .reduce((a, b) => a + b, 0);\n\n    const totalCommisions = operations\n      .map((item) => item?.commissionValue || 0)\n      .reduce((a, b) => a + b, 0);\n\n    const middleBuy = buyOperations\n      .map((item) => item?.price || 0)\n      .reduce((a, b) => a + b, 0);\n\n    const middleSell = sellOperations\n      .map((item) => item?.price || 0)\n      .reduce((a, b) => a + b, 0);\n\n    return {\n      tradingProfit: formatNumber(tradingProfit) || 0,\n      totalCommisions: Math.abs(formatNumber(totalCommisions)) || 0,\n      middleBuy: Math.abs(formatNumber(middleBuy / buyOperations.length)) || 0,\n      middleSell: formatNumber(middleSell / sellOperations.length) || 0,\n    };\n  }),\n  to: $operationStats,\n});\n\n// all filters\n\nforward({\n  from: $operationsSource.map((operations) => {\n    const status = [\n      ...new Set(operations.map((o) => o.status)),\n    ].map((item) => ({ text: statusTranslations[item], value: item }));\n\n    const ticker = [...new Set(operations.map((o) => o.ticker))]\n      .map((item = '') => ({ text: item, value: item }))\n      .filter((item) => item.value !== '');\n\n    const instrumentType = [\n      ...new Set(operations.map((o) => o.instrumentType)),\n    ].map((item) => ({ text: instrumentTranslations[item], value: item }));\n\n    const payment = [\n      ...new Set(operations.map((o) => o.currency)),\n    ].map((item) => ({ text: item, value: item }));\n\n    const operationType = [\n      ...new Set(operations.map((o) => o.operationType)),\n    ].map((item) => ({\n      text: operationTranslations[item],\n      value: item,\n    }));\n\n    return {\n      status,\n      ticker,\n      instrumentType,\n      payment,\n      operationType,\n    };\n  }),\n  to: $tableFilters,\n});\n\n// include portfolio\n\nforward({\n  from: combine(\n    $portfolio,\n    $operationsTable,\n    $isPortfolioIncluded,\n    (portfolio, operations) => {\n      const tickers = [\n        ...new Set(operations.map((item) => item?.ticker || '')),\n      ];\n\n      const portfolioBalance =\n        portfolio\n          ?.filter((item) => tickers.includes(item.ticker))\n          .map(\n            (item) =>\n              item.averagePositionPrice.value * item.balance +\n              item.expectedYield.value,\n          )\n          .reduce((a, b) => a + b, 0) || 0;\n\n      return formatNumber(portfolioBalance);\n    },\n  ),\n  to: $potrfolioProfit,\n});\n\nexport const $isTableDataPending =\n  getOperations.pending ||\n  getStocks.pending ||\n  getCurrency.pending ||\n  getOrderbook.pending;\n\nforward({\n  from: getOperations.done,\n  to: getPortfolio,\n});\n\nforward({\n  from: getOperations.done,\n  to: getStocks,\n});\n","import * as React from 'react';\nimport moment from 'moment';\nimport styled from 'styled-components';\n\nimport { useStore } from 'effector-react';\nimport { Table, Tooltip, Badge, Tag, Switch, DatePicker } from 'antd';\n\nimport * as API from 'api/operations';\nimport { getOperations } from 'features/operations';\nimport { getCurrency } from 'features/market';\nimport { addSorter, addFilter } from 'lib/table';\nimport { getRangeByName } from 'lib/constants';\n\nimport {\n  $operationsTable,\n  $isTableDataPending,\n  $tableFilters,\n  $operationStats,\n  $potrfolioProfit,\n  handleFilters,\n  includePortfolio,\n  $isPortfolioIncluded,\n  $currentFilter,\n} from './model';\n\nimport {\n  instrumentTranslations,\n  operationTranslations,\n  currencySymbols,\n  timeRanges,\n} from 'lib/constants';\n\nimport { formatNumber, getSignColor } from 'lib/format';\n\nconst defaultRange = getRangeByName('weekAgo');\n\nconst handlePickerDateChange = (_: any, dateStrings: string[]) => {\n  const from = moment(dateStrings[0]).startOf('day').toISOString();\n  const to = moment(dateStrings[1]).endOf('day').toISOString();\n\n  getOperations({\n    from,\n    to,\n  });\n};\n\nexport const OperationsPage: React.FC = () => {\n  const [currentRange, setRange] = React.useState('weekAgo');\n\n  const operationsTable = useStore($operationsTable);\n  const isTableDataPending = useStore($isTableDataPending);\n  const tableFilters = useStore($tableFilters);\n  const potrfolioProfit = useStore($potrfolioProfit);\n  const isPortfolioIncluded = useStore($isPortfolioIncluded);\n  const currentFilter = useStore($currentFilter);\n\n  const { tradingProfit, totalCommisions, middleBuy, middleSell } = useStore(\n    $operationStats,\n  );\n\n  const totalProfit = isPortfolioIncluded\n    ? formatNumber(tradingProfit + potrfolioProfit)\n    : tradingProfit;\n\n  React.useEffect(() => {\n    getCurrency();\n    getOperations(defaultRange);\n  }, []);\n\n  const operationsColumns = [\n    {\n      title: '',\n      dataIndex: 'status',\n      key: 'status',\n      filters: tableFilters.status,\n      filteredValue: currentFilter.status,\n      className: 'status-th-td',\n      render: (_: string, item: API.TableOperation) => (\n        <Tooltip title={item.id} arrowPointAtCenter>\n          <Badge status={item.status === 'Done' ? 'success' : 'error'} />\n        </Tooltip>\n      ),\n      width: 41,\n    },\n    {\n      title: 'Дата',\n      dataIndex: 'date',\n      key: 'date',\n      className: 'date-th-td',\n      ...addSorter('date'),\n      render: (date: string) => (\n        <Tag style={{ marginRight: 0 }}>\n          {moment(date).format('DD.MM.YYYY')} →{' '}\n          {moment(date).format('HH:mm:ss')}\n        </Tag>\n      ),\n      width: 180,\n    },\n    {\n      title: <>Тип</>,\n      dataIndex: 'instrumentType',\n      key: 'instrumentType',\n      className: 'instrument-th-td',\n      filters: tableFilters.instrumentType,\n      filteredValue: currentFilter.instrumentType,\n      render: (_: string, item: API.TableOperation) =>\n        instrumentTranslations[item.instrumentType],\n      width: 120,\n    },\n    {\n      title: <>Тикер</>,\n      dataIndex: 'ticker',\n      key: 'ticker',\n      className: 'ticker-th-td',\n      filters: tableFilters.ticker,\n      filteredValue: currentFilter.ticker,\n      ...addFilter<API.TableOperation>(['ticker']),\n      render: (ticker: string) => <Tag>{ticker}</Tag>,\n      width: 120,\n    },\n    {\n      title: <>Сумма</>,\n      dataIndex: 'payment',\n      key: 'payment',\n      className: 'payment-th-td',\n      ...addSorter('payment'),\n      render: (_: string, item: API.TableOperation) => (\n        <Tag color={getSignColor(item.payment)}>\n          {item.payment} {currencySymbols[item.currency]}\n        </Tag>\n      ),\n      width: 120,\n    },\n    {\n      title: <>Лоты</>,\n      dataIndex: 'quantity',\n      key: 'quantity',\n      className: 'quantity-th-td',\n      render: (_: string, item: API.TableOperation) => (\n        <>\n          <Tag color=\"blue\">\n            {item.quantity} ✕ {formatNumber(item.price)}&nbsp;\n            {currencySymbols[item.currency]}\n          </Tag>\n        </>\n      ),\n      width: 150,\n    },\n    {\n      title: <>Ком.</>,\n      dataIndex: 'commissionValue',\n      key: 'commissionValue',\n      className: 'commisition-th-td',\n      render: (com: number, item: API.TableOperation) => (\n        <Tag color=\"var(--red)\">\n          {Math.abs(formatNumber(com))} {currencySymbols[item.currency]}\n        </Tag>\n      ),\n      width: 120,\n    },\n    {\n      title: <>Операция</>,\n      dataIndex: 'operationType',\n      key: 'operationType',\n      filters: tableFilters.operationType,\n      filteredValue: currentFilter.operationType,\n      render: (_: string, item: API.TableOperation) =>\n        operationTranslations[item.operationType],\n      width: 200,\n    },\n    {\n      title: 'Название компании',\n      dataIndex: 'name',\n      key: 'name',\n      // width: 300,\n    },\n  ];\n\n  return (\n    <Container>\n      <Table\n        title={() => {\n          const dates = getRangeByName(currentRange);\n\n          return (\n            <>\n              <Options>\n                <Range>\n                  <DatePicker.RangePicker\n                    placeholder={['Начало', 'Конец']}\n                    onChange={handlePickerDateChange}\n                    style={{\n                      minWidth: '375px',\n                    }}\n                  />\n                </Range>\n                <Tags>\n                  {timeRanges.map(({ range, label }, key) => (\n                    <Tag\n                      key={key}\n                      color={currentRange === range ? '#108ee9' : ''}\n                      onClick={() => {\n                        setRange(range);\n                        getOperations(getRangeByName(range));\n                      }}\n                    >\n                      {label}\n                    </Tag>\n                  ))}\n                </Tags>\n                <Switches>\n                  <Switch\n                    defaultChecked={isPortfolioIncluded}\n                    onChange={(isChecked) => {\n                      includePortfolio(isChecked);\n                    }}\n                  />\n                  &nbsp;&nbsp;Учитывать портфель\n                </Switches>\n              </Options>\n              <Stats>\n                <div className=\"status-th\"></div>\n                <div className=\"date-th\">\n                  <Tag>\n                    с {moment(dates.from).format('D MMMM')} по{' '}\n                    {moment(dates.to).format('D MMMM')}\n                  </Tag>\n                </div>\n                <div className=\"type-th \"></div>\n                <div className=\"price-th\">\n                  <span className=\"label\">Результат торговли</span>\n                  <Tag color={getSignColor(totalProfit)}>\n                    {totalProfit}\n                    &nbsp;\n                    {currencySymbols.USD}\n                  </Tag>\n                </div>\n                <div className=\"quantity-th\">\n                  <span className=\"label\">\n                    Средняя\n                    <br />\n                    покупка/продажа\n                  </span>\n                  <Tag color=\"var(--red)\">{middleBuy}</Tag>\n                  &nbsp;~&nbsp;\n                  <Tag color=\"var(--green)\">{middleSell}</Tag>\n                </div>\n                <div className=\"commisition-th\">\n                  <span className=\"label\">Общая комиссия</span>\n                  <Tag color=\"var(--red)\">\n                    {totalCommisions}&nbsp;{currencySymbols.USD}\n                  </Tag>\n                </div>\n                <div className=\"other-th\"></div>\n              </Stats>\n            </>\n          );\n        }}\n        columns={operationsColumns}\n        loading={isTableDataPending}\n        dataSource={isTableDataPending ? [] : operationsTable}\n        rowKey=\"id\"\n        onChange={(pagination, filters) => {\n          handleFilters(filters);\n        }}\n        showSorterTooltip={false}\n        pagination={{ pageSize: 30 }}\n      />\n    </Container>\n  );\n};\n\nexport const Container = styled.section`\n  .ant-tag {\n    margin-right: 0;\n  }\n\n  .ticker-th-td,\n  .instrument-th-td,\n  .date-th-td {\n    text-align: center;\n  }\n\n  .payment-th-td,\n  .quantity-th-td,\n  .commisition-th-td {\n    border-left: 1px solid #f0f0f0;\n    text-align: center;\n  }\n\n  th.ticker-th-td,\n  th.payment-th-td,\n  th.quantity-th-td,\n  th.commisition-th-td {\n    text-align: left;\n  }\n\n  .commisition-th-td {\n    border-right: 1px solid #f0f0f0;\n  }\n\n  .status-th-td {\n    padding: 0;\n    text-align: center;\n\n    .ant-table-filter-column-title {\n      padding: 0;\n    }\n\n    .ant-table-filter-trigger-container {\n      left: 0;\n    }\n  }\n\n  .ant-table-title {\n    padding: 0;\n  }\n`;\n\nexport const Stats = styled.div`\n  width: 100%;\n  display: flex;\n  position: relative;\n  background-color: #f3f3f3;\n  border: 1px solid #e4e4e4;\n  border-bottom: 1px solid #f0f0f0;\n\n  .price-th,\n  .quantity-th,\n  .price-th,\n  .commisition-th,\n  .date-th,\n  .other-th {\n    padding: 12px 12px 11px 12px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .status-th {\n    width: 41px;\n  }\n\n  .date-th {\n    width: 180px;\n    flex-wrap: wrap;\n  }\n\n  .type-th {\n    width: 240px;\n  }\n\n  .price-th {\n    width: 120px;\n  }\n\n  .quantity-th {\n    width: 150px;\n  }\n\n  .commisition-th {\n    width: 120px;\n  }\n\n  .price-th,\n  .quantity-th,\n  .commisition-th {\n    display: flex;\n    flex-wrap: wrap;\n\n    span.label {\n      width: 100%;\n      text-align: center;\n      line-height: 1;\n      font-size: 1.2rem;\n      margin-bottom: 8px;\n    }\n  }\n`;\n\nexport const Options = styled.div`\n  width: 100%;\n  display: flex;\n  padding: 18px 0;\n`;\n\nexport const Range = styled.div`\n  padding: 0 16px;\n`;\n\nexport const Tags = styled.div`\n  padding: 0 16px;\n\n  .ant-tag {\n    cursor: pointer;\n    line-height: 30px;\n    margin-right: 9px;\n  }\n`;\n\nexport const Switches = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0 16px;\n`;\n","import * as React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { LoginPage, OperationsPage } from 'pages';\nimport { onlyAnon, onlyUsers } from 'features/user';\n\nexport const ROUTES = {\n  login: {\n    path: '/',\n    component: LoginPage,\n    guards: [onlyAnon()],\n  },\n  operations: {\n    title: 'Операции',\n    path: '/operations',\n    component: OperationsPage,\n    guards: [onlyUsers()],\n  },\n  notFoundForAnon: {\n    component: () => <Redirect to=\"/\" />,\n    guards: [onlyAnon()],\n    path: '*',\n  },\n  notFoundForUsers: {\n    component: () => <Redirect to=\"/operations\" />,\n    guards: [onlyUsers()],\n    path: '*',\n  },\n};\n\nexport const NAV_DATA = [\n  {\n    path: ROUTES.operations.path,\n    title: ROUTES.operations.title,\n  },\n];\n","import { Guard } from 'router-guards';\nimport { UserSession } from './model';\n\nexport function onlyAnon(): Guard<UserSession> {\n  return (route, context) => (context && context.role ? null : route);\n}\n\nexport function onlyUsers(): Guard<UserSession> {\n  return (route, context) => (context && context.role ? route : null);\n}\n","import * as React from 'react';\nimport { BankOutlined } from '@ant-design/icons';\nimport { deleteToken } from 'features/user';\n\nimport { Nav } from 'ui/molecules';\nimport { Logo } from 'ui/atoms';\n\nimport { HeaderContainer, LogoutButton } from './styles';\nimport { NAV_DATA } from 'pages/routes';\n\nexport const Header = () => {\n  return (\n    <HeaderContainer>\n      <Logo to=\"/\" icon={<BankOutlined />} />\n      <Nav data={NAV_DATA} />\n      <LogoutButton type=\"primary\" onClick={() => deleteToken()}>\n        Выйти\n      </LogoutButton>\n    </HeaderContainer>\n  );\n};\n","import styled from 'styled-components'\nimport { Layout } from 'antd'\n\nconst { Footer } = Layout\n\nexport const FooterContainer = styled(Footer)`\n  background-color: #fff;\n  border-top: 1px solid var(--border-color);\n`\n","import * as React from 'react';\n\nimport { FooterContainer } from './styles';\n\nconst todayYear = new Date().getFullYear();\n\nexport const Footer: React.FC = () => (\n  <FooterContainer>TIA © {todayYear}</FooterContainer>\n);\n","import styled from 'styled-components';\nimport { Layout } from 'antd';\n\nconst { Content } = Layout;\n\nexport const MainContainer = styled(Content)`\n  background-color: var(--body-bg);\n  padding: 24px;\n  min-height: calc(100vh - 128px);\n`;\n","import * as React from 'react';\n\nimport { MainContainer } from './styles';\n\ntype MainProps = {\n  children: React.ReactNode;\n};\n\nexport const Main: React.FC<MainProps> = ({ children }) => (\n  <MainContainer>{children}</MainContainer>\n);\n","import * as React from 'react';\nimport { Layout, Spin } from 'antd';\n\nimport { Header, Footer, Main } from 'ui/organisms';\nimport { absoluteCenterPosition } from 'lib/constants';\n\ntype GenericTemplateProps = {\n  isAuthed: boolean;\n  isPending: boolean;\n};\n\nexport const GenericTemplate: React.FC<GenericTemplateProps> = ({\n  children,\n  isAuthed,\n  isPending,\n}) => {\n  if (isPending && !isAuthed) {\n    return (\n      <Spin size=\"large\" spinning={isPending} style={absoluteCenterPosition} />\n    );\n  }\n\n  return (\n    <Spin size=\"large\" spinning={isPending}>\n      {isAuthed ? (\n        <Layout>\n          <Header />\n          <Layout>\n            <Main>{children}</Main>\n          </Layout>\n          <Footer />\n        </Layout>\n      ) : (\n        <Layout>{children}</Layout>\n      )}\n    </Spin>\n  );\n};\n","import * as React from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\nimport { renderRoutes } from 'router-guards';\nimport { useStore } from 'effector-react';\n\nimport { $user } from 'features/user';\nimport { ROUTES } from 'pages/routes';\n\nexport const Routing: React.FC = () => {\n    const session = useStore($user);\n    const routes = renderRoutes(ROUTES, session);\n\n    return <Switch>\n        {routes.map((route) => (\n            <Route key={route.name} {...route} />\n        ))}\n    </Switch>\n};","import * as React from 'react';\nimport { useStore } from 'effector-react';\nimport moment from 'moment';\n\nimport 'moment/locale/ru';\n\nimport { $user, $isAccountsPending, useAuth } from 'features/user';\nimport { GenericTemplate } from 'ui/templates';\n\nimport { Routing } from './routing';\n\nmoment.locale('ru');\n\nexport const App = () => {\n  const isAccountsPending = useStore($isAccountsPending);\n  const user = useStore($user);\n\n  useAuth();\n\n  return (\n    <GenericTemplate\n      isAuthed={Boolean(user.role)}\n      isPending={isAccountsPending}\n    >\n      <Routing />\n    </GenericTemplate>\n  );\n};\n","import * as React from 'react';\nimport * as ReactDom from 'react-dom';\n\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\nimport { GenericStyles, AntStylesOveride } from './styles';\nimport { App } from './app';\n\nconst history = createBrowserHistory();\n\nReactDom.render(\n  <>\n    <GenericStyles />\n    <AntStylesOveride />\n    <Router history={history}>\n      <App />\n    </Router>\n  </>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}